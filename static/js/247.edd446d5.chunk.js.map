{"version":3,"file":"static/js/247.edd446d5.chunk.js","mappings":"4QAEaA,EAAWC,EAAAA,GAAAA,GAAH,qQAYRC,EAAWD,EAAAA,GAAAA,GAAH,gM,SCTN,SAASE,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,IAAaH,GADlC,OACQI,EADR,OAEEL,EAAYK,GAFd,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACL,IAECF,EAIL,OACE,2BACE,0BACE,SAACL,EAAD,UACGK,GACCA,EAASQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACX,UAACf,EAAD,YACE,gBACEgB,IACEH,GAAY,0CACuBA,GAErCI,IAAKH,EACLI,MAAM,MACNC,OAAO,MAET,uBAAIL,KACJ,sCAAcC,OAXDH,EADJ,SAmBxB,C,8LC3CKQ,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,EAAAA,GAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMhB,GAAN,uFACHW,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDT,EADC,oBACaQ,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZjB,EAAY,mCAAG,WAAMI,GAAN,uFACHW,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDT,EADC,4BACqBQ,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKhB,MAJK,2CAAH,sDAOZoB,EAAe,mCAAG,WAAMjB,GAAN,uFACNW,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDT,EADC,4BACqBQ,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKK,SAJQ,2CAAH,qD","sources":["styles/Cast.styled.js","pages/Cast.jsx","services/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  justify-content: center;\n  max-width: calc(100vw - 50px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 30px;\n  padding: 0px;\n  list-style: none;\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n\nexport const CastItem = styled.li`\n  border: 1px solid black;\n  border-radius: 5px;\n  text-align: center;\n  padding: 20px 0px;\n  background-color: #f0f4f5;\n  > a {\n    text-decoration: none;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../services/API';\nimport { CastItem, CastList } from 'styles/Cast.styled';\n\nexport default function MovieCast() {\n  const [filmCast, setFilmCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCast() {\n      const cast = await getMovieCast(movieId);\n      setFilmCast(cast);\n    }\n    getCast();\n  }, [movieId]);\n\n  if (!filmCast) {\n    return;\n  }\n\n  return (\n    <main>\n      <div>\n        <CastList>\n          {filmCast &&\n            filmCast.map(({ id, profile_path, name, character }) => (\n              <CastItem key={id}>\n                <img\n                  src={\n                    profile_path &&\n                    `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  }\n                  alt={name}\n                  width=\"120\"\n                  height=\"\"\n                />\n                <p>{name}</p>\n                <p>Character:{character}</p>\n              </CastItem>\n            ))}\n        </CastList>\n      </div>\n    </main>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '60768512350c805128ff23350d77a5e9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItem","MovieCast","useState","filmCast","setFilmCast","movieId","useParams","useEffect","getMovieCast","cast","getCast","map","id","profile_path","name","character","src","alt","width","height","KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","getMovieReviews","results"],"sourceRoot":""}