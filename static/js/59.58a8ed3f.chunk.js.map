{"version":3,"file":"static/js/59.58a8ed3f.chunk.js","mappings":"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","sources":["components/MovieList.jsx","styles/Movie.styled.js","pages/Movies.jsx","services/API.jsx","styles/MovieList.styled.js"],"sourcesContent":["import { Outlet } from 'react-router-dom';\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link, MoviesCard, TrendMovieList } from '../styles/MovieList.styled';\n\nconst MainFilmList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <TrendMovieList>\n        {movieList.map(({ id, poster_path, title }) => (\n          <MoviesCard key={id}>\n            <Link\n              to={{\n                // pathname: `/goit-react-hw-05-movies/movies/${`${id}`}`,\n                pathname: `/movies/${id}`,\n                // state: {\n                //   from: {\n                //     location,\n                //     label: 'Back to Home',\n                //   },\n                // },\n                state: {\n                  from: location,\n                },\n              }}\n            >\n              <img\n                src={\n                  poster_path &&\n                  `https://image.tmdb.org/t/p/w500/${poster_path}`\n                }\n                alt={title}\n                height=\"300\"\n                width=\"\"\n              />\n              <p>{title}</p>\n            </Link>\n          </MoviesCard>\n        ))}\n      </TrendMovieList>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nMainFilmList.propTypes = {\n  movieList: PropTypes.array.isRequired,\n};\n\nexport default MainFilmList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 400px;\n  box-sizing: border-box;\n  font-size: 22px;\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  margin-left: 20px;\n`;\n\nexport const ButtonSearch = styled.button`\n  align-items: center;\n  padding: 10px 20px;\n  font-size: 22px;\n  border: 1px solid black;\n  border-radius: 5px;\n  background-color: orange;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MainFilmList from 'components/MovieList';\nimport { getMoviesQuery } from '../services/API';\nimport { ButtonSearch, Input } from 'styles/Movie.styled';\nimport '../styles/styled.css';\nimport Notiflix from 'notiflix';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [movieQuery, setMovieQuery] = useState('');\n\n  const movieName = searchParams.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (movieQuery === movieName) {\n      return Notiflix.Notify.failure('Enter movie name. Please!');\n    }\n    setSearchParams(movieQuery !== '' ? { query: movieQuery } : {});\n  };\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    async function getMovieByQuery() {\n      const searchMovies = await getMoviesQuery(movieName);\n      setSearchMovies(searchMovies.results);\n    }\n    getMovieByQuery();\n    setMovieQuery(movieName);\n  }, [movieName]);\n\n  return (\n    <>\n      <h2 className=\"article\">Search Movies</h2>\n      <form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          value={movieQuery}\n          onChange={e => setMovieQuery(e.target.value)}\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n        <ButtonSearch type=\"submit\">Search</ButtonSearch>\n      </form>\n      <MainFilmList movieList={searchMovies} />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '60768512350c805128ff23350d77a5e9';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const TrendMovieList = styled.ul`\n  display: grid;\n  justify-content: center;\n  max-width: calc(100vw - 50px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  gap: 22px;\n  padding: 0px;\n  list-style: none;\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n\nexport const MoviesCard = styled.li`\n  border: 1px solid gray;\n  border-radius: 4px;\n  text-align: center;\n  padding: 10px 0px;\n  font-weight: 500;\n  font-size: 20px;\n  background-color: #f0f4f5;\n  box-shadow: 0px 0px 25px 1px rgba(242, 205, 39, 1);\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const AdditonalInfoList = styled.ul`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  margin-bottom: 30px;\n  list-style: none;\n`;\n\nexport const AdditonalInfoItem = styled.li`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 20px;\n  text-align: center;\n  padding: 10px;\n  border: 1px solid black;\n  border-radius: 5px;\n  width: 100px;\n  margin-right: 20px;\n  background-color: orange;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: white;\n    \n`;\n"],"names":["movieList","location","useLocation","map","id","poster_path","title","to","pathname","state","from","src","alt","height","width","Suspense","fallback","Input","styled","ButtonSearch","Movies","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","movieQuery","setMovieQuery","movieName","get","useEffect","getMoviesQuery","results","getMovieByQuery","className","onSubmit","e","preventDefault","Notiflix","query","type","value","onChange","target","autoFocus","placeholder","KEY","BASE_URL","getTrendingMovies","axios","response","data","getMovieById","getMovieCast","cast","getMovieReviews","TrendMovieList","MoviesCard","AdditonalInfoList","AdditonalInfoItem","Link","NavLink"],"sourceRoot":""}